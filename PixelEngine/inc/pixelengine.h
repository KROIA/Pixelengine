#ifndef PIXELENGINE_H
#define PIXELENGINE_H

#include "pixelDisplay.h"
#include "point.h"
#include "vector.h"
#include "timer.h"

#include "iostream"
#include "stdio.h"

#include "vector"
#include "group.h"
#include "painterGroup.h"
#include "interactiveCollisionGroup.h"

class PixelEngine
{
    public:
        PixelEngine();
        PixelEngine(const PixelEngine &other);
        virtual ~PixelEngine();

        virtual void tick();
        virtual void display();

        virtual void addGameObject(GameObject *obj);

        virtual void addGroup(const GameObjectGroup &group);
        virtual void addGroup(const InteractiveCollisionGroup   &group);
        //virtual void addGroup(const ControllerGroup &group);
        virtual void addGroup(const PainterGroup    &group);



    protected:
        virtual void tickX();
        virtual void tickY();
        virtual void tickXY(const Point &dirLock);

    private:
        PixelDisplay *m_display;

        // First index of m_gameObjectGroupList is generated by the engine
        // Each element of the firtst index of the list contains
        // a GameObject* which was added using the addGameObject(...) function
        vector<GameObjectGroup> m_gameObjectGroupList; // Pointers in this list are property of this class
        vector<InteractiveCollisionGroup> m_interactiveColliderGroupList;   // Pointers in this list are property of the individual Gameobjects
        //vector<ControllerGroup> m_controllerGroupList; // Pointers in this list are property of the individual Gameobjects
        vector<PainterGroup> m_painterGroupList;    // Pointers in this list are property of the individual Gameobjects

        //Point m_directionLocker;
};
#endif // PIXELENGINE_H
